angular.module("todomvc",["ngRoute","ngResource","ngSanitize"]).config(["$routeProvider","$sceDelegateProvider",function(o,e){"use strict";var t={controller:"TodoCtrl",templateUrl:"todomvc-index.html",resolve:{store:["todoStorage",function(o){return o.then(function(o){return o.get(),o})}]}};o.when("/",t).when("/:status",t).otherwise({redirectTo:"/"}),e.resourceUrlWhitelist(["self","*://calendar.google.com/calendar/**"])}]),angular.module("todomvc").controller("TodoCtrl",["$scope","$routeParams","$filter","store","$sce",function(o,e,t,n,r){"use strict";var i=o.todos=n.todos;console.log(i),chrome.storage.sync.get({calendar:"",tasklist:""},function(e){o.calendarSrc="https://calendar.google.com/calendar/embed?src="+e.calendar,o.calendar=r.trustAsResourceUrl(o.calendarSrc),o.$apply()}),o.newTodo="",o.editedTodo=null,o.$watch("todos",function(){o.remainingCount=t("filter")(i,{completed:!1}).length,o.completedCount=i.length-o.remainingCount,o.allChecked=!o.remainingCount},!0),o.$on("$routeChangeSuccess",function(){var t=o.status=e.status||"";o.statusFilter="active"===t?{completed:!1}:"completed"===t?{completed:!0}:{}}),o.addTodo=function(){var e={title:o.newTodo.trim(),completed:!1};e.title&&(o.saving=!0,n.insert(e).then(function(){o.newTodo=""}).finally(function(){o.saving=!1}))},o.editTodo=function(e){o.editedTodo=e,o.originalTodo=angular.extend({},e)},o.saveEdits=function(e,t){return"blur"===t&&"submit"===o.saveEvent?void(o.saveEvent=null):(o.saveEvent=t,o.reverted?void(o.reverted=null):(e.title=e.title.trim(),e.title===o.originalTodo.title?void(o.editedTodo=null):void n[e.title?"put":"delete"](e).then(function(){},function(){e.title=o.originalTodo.title}).finally(function(){o.editedTodo=null})))},o.revertEdits=function(e){i[i.indexOf(e)]=o.originalTodo,o.editedTodo=null,o.originalTodo=null,o.reverted=!0},o.removeTodo=function(o){n.delete(o)},o.saveTodo=function(o){n.put(o)},o.toggleCompleted=function(o,e){angular.isDefined(e)&&(o.completed=e),n.put(o,i.indexOf(o)).then(function(){},function(){o.completed=!o.completed})},o.clearCompletedTodos=function(){n.clearCompleted()},o.markAll=function(e){i.forEach(function(t){t.completed!==e&&o.toggleCompleted(t,e)})}}]),angular.module("todomvc").factory("todoStorage",["$http","$injector",function(o,e){"use strict";return o.get("/api").then(function(){return e.get("api")},function(){return e.get("localStorage")})}]).factory("api",["$resource",function(o){"use strict";var e={todos:[],api:o("/api/todos/:id",null,{update:{method:"PUT"}}),clearCompleted:function(){var o=e.todos.slice(0),t=e.todos.filter(function(o){return!o.completed});return angular.copy(t,e.todos),e.api.delete(function(){},function(){angular.copy(o,e.todos)})},delete:function(o){var t=e.todos.slice(0);return e.todos.splice(e.todos.indexOf(o),1),e.api.delete({id:o.id},function(){},function(){angular.copy(t,e.todos)})},get:function(){return e.api.query(function(o){angular.copy(o,e.todos)})},insert:function(o){var t=e.todos.slice(0);return e.api.save(o,function(t){o.id=t.id,e.todos.push(o)},function(){angular.copy(t,e.todos)}).$promise},put:function(o){return e.api.update({id:o.id},o).$promise}};return e}]).factory("localStorage",["$q",function(o){"use strict";var e={todos:[],_getFromLocalStorage:function(){var e=o.defer();return chrome.storage.sync.get({todos:[]},function(o){e.resolve(o.todos)}),e.promise},_saveToLocalStorage:function(o){chrome.storage.sync.set({todos:o})},clearCompleted:function(){var t=o.defer(),n=e.todos.filter(function(o){return!o.completed});return angular.copy(n,e.todos),e._saveToLocalStorage(e.todos),t.resolve(e.todos),t.promise},delete:function(t){var n=o.defer();return e.todos.splice(e.todos.indexOf(t),1),e._saveToLocalStorage(e.todos),n.resolve(e.todos),n.promise},get:function(){var t=o.defer();return e._getFromLocalStorage().then(function(o){angular.copy(o,e.todos),t.resolve(e.todos)}),t.promise},insert:function(t){var n=o.defer();return e.todos.push(t),e._saveToLocalStorage(e.todos),n.resolve(e.todos),n.promise},put:function(t,n){var r=o.defer();return e.todos[n]=t,e._saveToLocalStorage(e.todos),r.resolve(e.todos),r.promise}};return e}]),angular.module("todomvc").directive("todoFocus",["$timeout",function(o){"use strict";return function(e,t,n){e.$watch(n.todoFocus,function(e){e&&o(function(){t[0].focus()},0,!1)})}}]),angular.module("todomvc").directive("todoEscape",[function(){"use strict";var o=27;return function(e,t,n){t.bind("keydown",function(t){t.keyCode===o&&e.$apply(n.todoEscape)}),e.$on("$destroy",function(){t.unbind("keydown")})}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
